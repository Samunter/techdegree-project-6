WHAT IS NPM?

INTRODUCING NPM

a command line application and package manager for javascript

npm is a great way to install command line tools and include other people's code in your applications. we can use npm to make use of preexisting open source code






HOW TO FIND AND CHOOSE PACKAGES

There are a number of indicators that you can use to determine which package to use.

Popularity on npm – the number of downloads
Release Date – the more recent the better
Number of Releases – the more frequent the better
Passing Tests - if there's tests passing
Number of Open Issues – the less the better
Popularity on GitHub – The more Stars, Forks and Watches the better
Number of Contributors on GitHub – more eyes on the code the better
















INSTALLING PACKAGES WITH NPM

INSTALLING LOCAL PACKAGES

type npm in the console to get a list of all the available commands

type npm nameOfCommand -h to get help with that command

npm install nameOfPackage

this installs the package in your current workspace. This is useful for packages that are specific to a project






INSTALLING GLOBAL PACKAGES

npm install nameOfPackage -g

installs the package globally, i.e. on your computer where it is accessible to all future projects






MANAGING DEPENDENCIES IN THE PACKAGE.JSON FILE

the package.json file manages all the dependencies for the project

instead of manually creating package.json, we can use npm's init command

package.json describes the project, includes a property called "dependencies" which lists all packages/modules/dependencies

npm install <package> --save

saves package as a dependency in package.json

.gitignore for the files you don't want to upload to git - including packages

npm install without arguments will look for package.json and install all the dependencies

there are also development dependencies, like testing frameworks

npm install <package> --save-dev

NODE_ENV=production npm install

doesn't install dev dependencies
















UPDATING AND UNINSTALLING PACKAGES WITH NPM

UPDATING PACKAGES WITH NPM

version 1.2.3
1 = major release
2 = minor release
3 = patch release

^ means install all minor releases

~ means install all patches

no ^ or ~ means install specific version only

npm outdated gives you an overview of what's outdated

npm update upgrades packages included in package.json

npm update <package> updates specific package

npm update <package> -g updates global package






UNINSTALLING PACKAGES WITH NPM

npm uninstall <package> --save 

removes from package.json file

npm uninstall <package> --save-dev

removes dev packages from package.json file





















