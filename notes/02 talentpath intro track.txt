each request you make on the web is sent using hte hypertext transfer protocol or http. http is how clients and servers talk to each other on the web. because there are so many different types of clients and servers, there need to be some rules in place for eveyrone to be able to talk to each other, and http lays out those ground rules. in each http exchange, two bits of information are sent bavck to the client. first the stateus code, then the resource you requested, like a web page or file. http status codes help identify the cause of the problem when a webpage or other resource doesn't load properly. the http specifications define certain number ranges for specific types of responses. One you might recognize is the infamous 404 page not found. its' just one of many codes that can be returned as an http response. each of the status codes are 3 numbers long, and use the first number to catecorize the status. for example, 100 responses are informational, 200 responses mean successs, 300 responses mean redirection, 400 responses mean a client error, and 500 responses mean a server error. we'll stop there for now to give us a chance to talk about https, the secure version of http. sometimes in ur travles around the web, you'll see a lock icon in the status bar, the lock will usually e all the way to the left and the url will start with https. the s stands for secure and it maenas that communication between your client and the server is private and encrypted. when surfing the web, don't use sites with sensitive info, even just username and password, if they don't have the lock. to review, every web rq starts with typing in or clicking something on the web. oftentimes you find what you need using a url. urls can also be hidding behind hyperlinks. incl in the url is a domain name. theu're really just catchy version sof ip addresses, and dns make the connection between domain names and ip addresses. clients and severs are designed to talkto each other using http, the common language they've agreed to speak, but none of these pieces of software have to work together so nicely. it's up to developers to work together, and that's what mmakes the web work.

a domain name server is a special type of server that connects domain names with ip addresses. and itsa good thin gwe have them, thanks to dns yo don' thave to keep your own address book of ips for your favorite websites. instead you just connect through dns, which manages a massive database that maps domain names to ip addresses. you can always bypass dns by typing an ip directly in your browser, but can you imagine doing that every time? and what if your favorte website gets a new ip address? dns is a relaly important part of the web. lets see how it works. when it comes to dns, proximity matters. depending on where you are, and when you log onto the internet, you may use a different dns to find websites. meaning, that dns that looks up teamtreehouse.com when yo're at home, may not be the same dns at work or school. say for example you hit up your local library for some free wifi. when you log onto the internet, the library's internet service provider tells your computer what dns to start with when looking up ip addresse for domain names on hte web. although, not every dns server knows every domain name. for example, when i type in teamtreehouse.com into my address bar, the dns system begins by looking at the top level domain, or .com in the case of teamtreehouse.com. it will then ask which server the domain teamtreehouse is on if it doens't already know. within dns there's a hierarchy of servers, so if one doesn't konw, it sends a request to the next server, and the next, until the correct website is located. if all goes well, the server sends a short mesage back to the client, your computer, saying everything is okay, followed by the webpage itself. the dns system is quite complex, but the important takeaway is that dns is the address book for the internet, and its what connects domain names with ip addresses.

in every url is a domain name. a domain name is a word or phrase used to help people remember web addresses, or ip addresses. in this video, lets check out how domain names and ip addresses work. in each odomain name, there are a few parts, labeled from right to left. top level domains, or TLDs, are actually what most people think of as the end, or extension of a domain. a few top level domains you're probably familiar with are .com, .net, .edu, and .org. however this list also includes country codes like .uk, .jp, .us, and evne brands names, organizations, an dvanity words .online, .inc, .shopping, .ninja, .name. top level domain names are managed by the internet corporation for assigned names and numbers, or icann, and can be found at www.icann.org. icann authorize domain name registrars, which are the comopanies responsible for registering and reassigning domain names. when we say domain names are organized from right to left, it means each label, or section between the dots, specifices a subdomain of the section to its right. for example, in teamtreehouse.com, .com is the top-level domain. teamtreehouse is a subdomain of .com. if you thought about this in terms of geography, .com would be the country you live in, like the usa, and teamtreehouse is the state or province. any subdomains of teamtreehouse.com, like www.teamtreehouse.com, are like the towns in the state in the country. an important function of domain names is to provide easily recognizable and memorable names to the numeric ip addresses of the servers where the websites actually live. if i wanted to find the treehouse website using its domain name, i would type in teamtreehouse.com into the address bar. if i wanted to find the treehouse website using its ip address, i would type in 173.247.98.20 and hit enter, and look, it's the same website! nearly everything on the web uses internet protocol version 4, or IPv4. it is comprised of 4 numbers, each between 0 and 255, separated by dots. IPv4 has the capacity to identify about 4.3 billion unique addresses. but with over 7 billion people already on the planet, and each person having more and more devices connected to the internet, IPv4 is quickly running out of space. luckily there is already IPv6 which isquickly catching on. it will support every person on earth having billions of devices connected to the web at once. IPv6 is kind of like adding more numbers to phone numbers as a population grows. phone numbers in a country often start with just a few numbers, but as more people get phones, phone numbers get longer, and hten an area code is added to differentiate the same nubmer in different geographic region. IPv6 is the new format for ip addresses, and gives us billions of new phone numbers for all the new devices on the web. now that we know a bit more about domain names and ip addresses, lets find out how they're all connected with DNS.

as you saw in the last video, URLs, domain names, IP addresses, and DNS are all quite closely tied to one another. But because there are so many interesting things about each one, every video in this stage will go over each in more detail. Let's start with URLs - uniform resource locators. Let's start with the man who invented them. He invented the www in 1989. In his pursuit, he standardized many of the processes needed to make computers talk to each other .Univorm Resource Locators, or urls, are one of those processes. One of the most wonderful parts of the web is how everything is connected. web pages are connected using what's calle dhyperlinks. behind every hyperlink is a url. hyperlinks often look like the blue underlined words on the page. but they can also look like a lot of things these days, like images or buttons. for example, here on the youtube page, hyperlinks look like the titles of the videos. when you click on one of these links, your computer takes this url to get a copy of the next webpage you request. If the url starts with http, the protocol used for the web, the next bit in the url after the colon and two slashes is the domain name, like teamtreehouse.com. any information after the domian name describes the full path to the resource. however more and more urls have become shorter and shorter. nowadays nearly everything is omitted in the address bar, including http:// the port number, and the full path of the resource. the omission of all these details are called clean urls. but don't be deceived, just because you can't see these details doesn't mean they're not there. the one detail that's always left is the domain name, like teamtreehouse.com. while this domain name will help users find resources on the web, computers don't use names to find things, they use numbers, and the numbers are called ip addresses. now that you're familiar with the parts of a url, lets break down a few of those parts in the next video when we talk about domain names and ip addresses.

what actually happends between typing teamtreehouse.com and seeing the website? if point a is the browser on your computer and point b is a web server hosting teamtreehouse.com, everything in between is "the cloud" right? well, yes and no. in between each browser request and server response are one or multiple pieces of software, most of them speaking to each other using a common protocol called http, the hypertext transfer protocol. Let's start with an overwview of how the web works. Every website you've browsed started with a client sending a request to a server. A client is anything that can request a resource on the web. A few examples are computer, laptops, cell phones, and tablets. But even software programs themselves can be clients. When a client, you and your computer, types a url into the address bar, you're sending a request to a server. The internet is a net of computers all connected together by various cables. It's made of wires, routers, switcehs and satellites, connecting the network of servers together. These servers can perform a lot of tasks. A few server examples are web servers that host websites, domain name servers (DNS Server) that connect domain names with ip addresses, or mail servers that send and accept email messages. All of these things are  considere dpart of the internet. Housed on servers are the files, folders, and media that make up web pages. These files, folders, and media are all software and are what we're talking about when we say the web. The web is the software that makes up websites, applications, games, wikis, and videos that you can access on a web broswer. As you know, there are a lot of different web broswers out there. there are also many types of clients: mobile phones, apps, and games. In order for everyone to play nicesly together, they have to speak the same language, and that language is called http, hypertext transfer protocol. Nearly all http requests start with you typing in a domain name like teamtreehouse.com. Servers however use numbers to locate each other, not words. These numbers are called IP Addresses, and work similarly to how phone numbers work with each IP Address pointing to a particular server on the web. The service in the middle between the domain name you type in and the IP Address used by the server is called a domain name server, or DNS. Once the DNS finds the IP address or "phone number" you asked for with the domain name, it rushes your request along to the server hosting the website. for now, we can think of this request as a stamped, self-addressed envelope sent to the website's IP with a return address of your computer's IP. When the envelope is delivered to the server hosting the website, the server sends the envelope back to you with the website you wanted. When this happens, the http trip is over, and you have the thing you asked for.

css reference site css-tricks.com

we indicate the element we're styling is a class by putting a dot in front of it.

Classes are attributes that we can add to html elements. You type a class just like any other html attribute: inside the carrots with an equals sign and a set of quotes.

All of these styling options like color, line height, margin are called CSS properties

Each block of CSS is called a CSS rule. Each rule selects a tag on an html page and assigns it a list of properties that control how a browser displays the tag.

You can create a list with one of two tags: <ul> or <ol>. ul stands for unordered list, and ol for ordered list. To separate the items in a list you need another tag, <li> which stands for list item.

anchor tag makes it a clickable link, href tells it where to go

<a href=#top>Go back to the top of the page.</a>

You can place an <img> tag inside an <a> tag to turn the image into a link

href attribute on an anchor tag tells the browser where we want the link to go

alt attribute on an image tag describes an image

image tag has no closing tag. tags that don't need to be closed are called self closing tags or empty elements. only a few of thse, like the link tag


placeimg.com loads random image on your webpage
Every time refresh page should get a new image, but don't?

html element = any html tag on a page

You can think of all the different parts of your webpage as a series of boxes that live inside one another. The outermost box is html, and that contains all the information about your webpage. Inside the html box are two more boxes: head and body. the head contains a lot of behind the scenes info that people won't see but that's important for the broswer to display your page properly. the body box contains everything you see in the browser. Inside the body is where you have  alot of freedom, wher eyou can add as many or as few boxes as you'd like. You might have 3 large boxes like header, main, and footer, and inside those boxes you might have a photo box, or a navigatoin box. Or your website might be a complex mosaic of dozens of boxes - the choice is yours.